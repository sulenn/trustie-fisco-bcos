// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package opensource

import (
	"math/big"
	"strings"

	"github.com/FISCO-BCOS/go-sdk/abi"
	"github.com/FISCO-BCOS/go-sdk/abi/bind"
	"github.com/FISCO-BCOS/go-sdk/core/types"
	"github.com/FISCO-BCOS/go-sdk/event"
	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/common"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// OpenSourceABI is the input ABI used to generate the binding from.
const OpenSourceABI = "[{\"constant\":true,\"inputs\":[{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"token_name\",\"type\":\"string\"}],\"name\":\"selectUserBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"token_name\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"minusUserBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pull_request_id\",\"type\":\"string\"},{\"name\":\"content\",\"type\":\"string\"}],\"name\":\"addPullRequestData\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"commit_hash\",\"type\":\"string\"}],\"name\":\"selectCommitInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pull_request_id\",\"type\":\"string\"}],\"name\":\"selectPullRequestInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"commit_hash\",\"type\":\"string\"},{\"name\":\"repo_id\",\"type\":\"string\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"time\",\"type\":\"string\"},{\"name\":\"content\",\"type\":\"string\"},{\"name\":\"commit_diff\",\"type\":\"string\"}],\"name\":\"addCommitData\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"token_name\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addUserBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"push_id\",\"type\":\"string\"}],\"name\":\"selectPushInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"push_id\",\"type\":\"string\"},{\"name\":\"push_number\",\"type\":\"uint256\"},{\"name\":\"repo_id\",\"type\":\"string\"},{\"name\":\"reponame\",\"type\":\"string\"},{\"name\":\"ownername\",\"type\":\"string\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"branch\",\"type\":\"string\"},{\"name\":\"commit_shas\",\"type\":\"string\"},{\"name\":\"time\",\"type\":\"string\"}],\"name\":\"addPushData\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"payer\",\"type\":\"string\"},{\"name\":\"payee\",\"type\":\"string\"},{\"name\":\"token_name\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferUserBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"username\",\"type\":\"string\"}],\"name\":\"selectUserAllBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token_name\",\"type\":\"string\"},{\"name\":\"owner\",\"type\":\"string\"},{\"name\":\"total_supply\",\"type\":\"uint256\"},{\"name\":\"cur_supply\",\"type\":\"uint256\"},{\"name\":\"username\",\"type\":\"string[]\"},{\"name\":\"balance\",\"type\":\"uint256[]\"}],\"name\":\"createRepo\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token_name\",\"type\":\"string\"}],\"name\":\"selectRepoBasicInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pull_request_id\",\"type\":\"string\"}],\"name\":\"selectPullRequestAllInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]"

// OpenSourceBin is the compiled bytecode used for deploying new contracts.
var OpenSourceBin = ""

// DeployOpenSource deploys a new contract, binding an instance of OpenSource to it.
func DeployOpenSource(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *OpenSource, error) {
	parsed, err := abi.JSON(strings.NewReader(OpenSourceABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(OpenSourceBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &OpenSource{OpenSourceCaller: OpenSourceCaller{contract: contract}, OpenSourceTransactor: OpenSourceTransactor{contract: contract}, OpenSourceFilterer: OpenSourceFilterer{contract: contract}}, nil
}

func AsyncDeployOpenSource(auth *bind.TransactOpts, handler func(*types.Receipt, error), backend bind.ContractBackend) (*types.Transaction, error) {
	parsed, err := abi.JSON(strings.NewReader(OpenSourceABI))
	if err != nil {
		return nil, err
	}

	tx, err := bind.AsyncDeployContract(auth, handler, parsed, common.FromHex(OpenSourceBin), backend)
	if err != nil {
		return nil, err
	}
	return tx, nil
}

// OpenSource is an auto generated Go binding around a Solidity contract.
type OpenSource struct {
	OpenSourceCaller     // Read-only binding to the contract
	OpenSourceTransactor // Write-only binding to the contract
	OpenSourceFilterer   // Log filterer for contract events
}

// OpenSourceCaller is an auto generated read-only Go binding around a Solidity contract.
type OpenSourceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OpenSourceTransactor is an auto generated write-only Go binding around a Solidity contract.
type OpenSourceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OpenSourceFilterer is an auto generated log filtering Go binding around a Solidity contract events.
type OpenSourceFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OpenSourceSession is an auto generated Go binding around a Solidity contract,
// with pre-set call and transact options.
type OpenSourceSession struct {
	Contract     *OpenSource       // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OpenSourceCallerSession is an auto generated read-only Go binding around a Solidity contract,
// with pre-set call options.
type OpenSourceCallerSession struct {
	Contract *OpenSourceCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts     // Call options to use throughout this session
}

// OpenSourceTransactorSession is an auto generated write-only Go binding around a Solidity contract,
// with pre-set transact options.
type OpenSourceTransactorSession struct {
	Contract     *OpenSourceTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts     // Transaction auth options to use throughout this session
}

// OpenSourceRaw is an auto generated low-level Go binding around a Solidity contract.
type OpenSourceRaw struct {
	Contract *OpenSource // Generic contract binding to access the raw methods on
}

// OpenSourceCallerRaw is an auto generated low-level read-only Go binding around a Solidity contract.
type OpenSourceCallerRaw struct {
	Contract *OpenSourceCaller // Generic read-only contract binding to access the raw methods on
}

// OpenSourceTransactorRaw is an auto generated low-level write-only Go binding around a Solidity contract.
type OpenSourceTransactorRaw struct {
	Contract *OpenSourceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewOpenSource creates a new instance of OpenSource, bound to a specific deployed contract.
func NewOpenSource(address common.Address, backend bind.ContractBackend) (*OpenSource, error) {
	contract, err := bindOpenSource(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &OpenSource{OpenSourceCaller: OpenSourceCaller{contract: contract}, OpenSourceTransactor: OpenSourceTransactor{contract: contract}, OpenSourceFilterer: OpenSourceFilterer{contract: contract}}, nil
}

// NewOpenSourceCaller creates a new read-only instance of OpenSource, bound to a specific deployed contract.
func NewOpenSourceCaller(address common.Address, caller bind.ContractCaller) (*OpenSourceCaller, error) {
	contract, err := bindOpenSource(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &OpenSourceCaller{contract: contract}, nil
}

// NewOpenSourceTransactor creates a new write-only instance of OpenSource, bound to a specific deployed contract.
func NewOpenSourceTransactor(address common.Address, transactor bind.ContractTransactor) (*OpenSourceTransactor, error) {
	contract, err := bindOpenSource(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &OpenSourceTransactor{contract: contract}, nil
}

// NewOpenSourceFilterer creates a new log filterer instance of OpenSource, bound to a specific deployed contract.
func NewOpenSourceFilterer(address common.Address, filterer bind.ContractFilterer) (*OpenSourceFilterer, error) {
	contract, err := bindOpenSource(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &OpenSourceFilterer{contract: contract}, nil
}

// bindOpenSource binds a generic wrapper to an already deployed contract.
func bindOpenSource(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(OpenSourceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OpenSource *OpenSourceRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _OpenSource.Contract.OpenSourceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OpenSource *OpenSourceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.Contract.OpenSourceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OpenSource *OpenSourceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.Contract.OpenSourceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OpenSource *OpenSourceCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _OpenSource.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OpenSource *OpenSourceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OpenSource *OpenSourceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.Contract.contract.Transact(opts, method, params...)
}

// SelectCommitInfo is a free data retrieval call binding the contract method 0x653cf010.
//
// Solidity: function selectCommitInfo(string commit_hash) constant returns(string, string, string, string, string, string, string)
func (_OpenSource *OpenSourceCaller) SelectCommitInfo(opts *bind.CallOpts, commit_hash string) (string, string, string, string, string, string, string, error) {
	var (
		ret0 = new(string)
		ret1 = new(string)
		ret2 = new(string)
		ret3 = new(string)
		ret4 = new(string)
		ret5 = new(string)
		ret6 = new(string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
		ret4,
		ret5,
		ret6,
	}
	err := _OpenSource.contract.Call(opts, out, "selectCommitInfo", commit_hash)
	return *ret0, *ret1, *ret2, *ret3, *ret4, *ret5, *ret6, err
}

// SelectCommitInfo is a free data retrieval call binding the contract method 0x653cf010.
//
// Solidity: function selectCommitInfo(string commit_hash) constant returns(string, string, string, string, string, string, string)
func (_OpenSource *OpenSourceSession) SelectCommitInfo(commit_hash string) (string, string, string, string, string, string, string, error) {
	return _OpenSource.Contract.SelectCommitInfo(&_OpenSource.CallOpts, commit_hash)
}

// SelectCommitInfo is a free data retrieval call binding the contract method 0x653cf010.
//
// Solidity: function selectCommitInfo(string commit_hash) constant returns(string, string, string, string, string, string, string)
func (_OpenSource *OpenSourceCallerSession) SelectCommitInfo(commit_hash string) (string, string, string, string, string, string, string, error) {
	return _OpenSource.Contract.SelectCommitInfo(&_OpenSource.CallOpts, commit_hash)
}

// SelectPullRequestAllInfo is a free data retrieval call binding the contract method 0xfe2da67a.
//
// Solidity: function selectPullRequestAllInfo(string pull_request_id) constant returns(string[], string[])
func (_OpenSource *OpenSourceCaller) SelectPullRequestAllInfo(opts *bind.CallOpts, pull_request_id string) ([]string, []string, error) {
	var (
		ret0 = new([]string)
		ret1 = new([]string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
	}
	err := _OpenSource.contract.Call(opts, out, "selectPullRequestAllInfo", pull_request_id)
	return *ret0, *ret1, err
}

// SelectPullRequestAllInfo is a free data retrieval call binding the contract method 0xfe2da67a.
//
// Solidity: function selectPullRequestAllInfo(string pull_request_id) constant returns(string[], string[])
func (_OpenSource *OpenSourceSession) SelectPullRequestAllInfo(pull_request_id string) ([]string, []string, error) {
	return _OpenSource.Contract.SelectPullRequestAllInfo(&_OpenSource.CallOpts, pull_request_id)
}

// SelectPullRequestAllInfo is a free data retrieval call binding the contract method 0xfe2da67a.
//
// Solidity: function selectPullRequestAllInfo(string pull_request_id) constant returns(string[], string[])
func (_OpenSource *OpenSourceCallerSession) SelectPullRequestAllInfo(pull_request_id string) ([]string, []string, error) {
	return _OpenSource.Contract.SelectPullRequestAllInfo(&_OpenSource.CallOpts, pull_request_id)
}

// SelectPullRequestInfo is a free data retrieval call binding the contract method 0x7f08b3e3.
//
// Solidity: function selectPullRequestInfo(string pull_request_id) constant returns(string, string)
func (_OpenSource *OpenSourceCaller) SelectPullRequestInfo(opts *bind.CallOpts, pull_request_id string) (string, string, error) {
	var (
		ret0 = new(string)
		ret1 = new(string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
	}
	err := _OpenSource.contract.Call(opts, out, "selectPullRequestInfo", pull_request_id)
	return *ret0, *ret1, err
}

// SelectPullRequestInfo is a free data retrieval call binding the contract method 0x7f08b3e3.
//
// Solidity: function selectPullRequestInfo(string pull_request_id) constant returns(string, string)
func (_OpenSource *OpenSourceSession) SelectPullRequestInfo(pull_request_id string) (string, string, error) {
	return _OpenSource.Contract.SelectPullRequestInfo(&_OpenSource.CallOpts, pull_request_id)
}

// SelectPullRequestInfo is a free data retrieval call binding the contract method 0x7f08b3e3.
//
// Solidity: function selectPullRequestInfo(string pull_request_id) constant returns(string, string)
func (_OpenSource *OpenSourceCallerSession) SelectPullRequestInfo(pull_request_id string) (string, string, error) {
	return _OpenSource.Contract.SelectPullRequestInfo(&_OpenSource.CallOpts, pull_request_id)
}

// SelectPushInfo is a free data retrieval call binding the contract method 0xa0ea050a.
//
// Solidity: function selectPushInfo(string push_id) constant returns(string, uint256, string, string, string, string, string, string, string)
func (_OpenSource *OpenSourceCaller) SelectPushInfo(opts *bind.CallOpts, push_id string) (string, *big.Int, string, string, string, string, string, string, string, error) {
	var (
		ret0 = new(string)
		ret1 = new(*big.Int)
		ret2 = new(string)
		ret3 = new(string)
		ret4 = new(string)
		ret5 = new(string)
		ret6 = new(string)
		ret7 = new(string)
		ret8 = new(string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
		ret4,
		ret5,
		ret6,
		ret7,
		ret8,
	}
	err := _OpenSource.contract.Call(opts, out, "selectPushInfo", push_id)
	return *ret0, *ret1, *ret2, *ret3, *ret4, *ret5, *ret6, *ret7, *ret8, err
}

// SelectPushInfo is a free data retrieval call binding the contract method 0xa0ea050a.
//
// Solidity: function selectPushInfo(string push_id) constant returns(string, uint256, string, string, string, string, string, string, string)
func (_OpenSource *OpenSourceSession) SelectPushInfo(push_id string) (string, *big.Int, string, string, string, string, string, string, string, error) {
	return _OpenSource.Contract.SelectPushInfo(&_OpenSource.CallOpts, push_id)
}

// SelectPushInfo is a free data retrieval call binding the contract method 0xa0ea050a.
//
// Solidity: function selectPushInfo(string push_id) constant returns(string, uint256, string, string, string, string, string, string, string)
func (_OpenSource *OpenSourceCallerSession) SelectPushInfo(push_id string) (string, *big.Int, string, string, string, string, string, string, string, error) {
	return _OpenSource.Contract.SelectPushInfo(&_OpenSource.CallOpts, push_id)
}

// SelectRepoBasicInfo is a free data retrieval call binding the contract method 0xed2f22ae.
//
// Solidity: function selectRepoBasicInfo(string token_name) constant returns(string, string, int256, int256)
func (_OpenSource *OpenSourceCaller) SelectRepoBasicInfo(opts *bind.CallOpts, token_name string) (string, string, *big.Int, *big.Int, error) {
	var (
		ret0 = new(string)
		ret1 = new(string)
		ret2 = new(*big.Int)
		ret3 = new(*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
	}
	err := _OpenSource.contract.Call(opts, out, "selectRepoBasicInfo", token_name)
	return *ret0, *ret1, *ret2, *ret3, err
}

// SelectRepoBasicInfo is a free data retrieval call binding the contract method 0xed2f22ae.
//
// Solidity: function selectRepoBasicInfo(string token_name) constant returns(string, string, int256, int256)
func (_OpenSource *OpenSourceSession) SelectRepoBasicInfo(token_name string) (string, string, *big.Int, *big.Int, error) {
	return _OpenSource.Contract.SelectRepoBasicInfo(&_OpenSource.CallOpts, token_name)
}

// SelectRepoBasicInfo is a free data retrieval call binding the contract method 0xed2f22ae.
//
// Solidity: function selectRepoBasicInfo(string token_name) constant returns(string, string, int256, int256)
func (_OpenSource *OpenSourceCallerSession) SelectRepoBasicInfo(token_name string) (string, string, *big.Int, *big.Int, error) {
	return _OpenSource.Contract.SelectRepoBasicInfo(&_OpenSource.CallOpts, token_name)
}

// SelectUserAllBalance is a free data retrieval call binding the contract method 0xc50573fa.
//
// Solidity: function selectUserAllBalance(string username) constant returns(string[], string[], uint256[])
func (_OpenSource *OpenSourceCaller) SelectUserAllBalance(opts *bind.CallOpts, username string) ([]string, []string, []*big.Int, error) {
	var (
		ret0 = new([]string)
		ret1 = new([]string)
		ret2 = new([]*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
	}
	err := _OpenSource.contract.Call(opts, out, "selectUserAllBalance", username)
	return *ret0, *ret1, *ret2, err
}

// SelectUserAllBalance is a free data retrieval call binding the contract method 0xc50573fa.
//
// Solidity: function selectUserAllBalance(string username) constant returns(string[], string[], uint256[])
func (_OpenSource *OpenSourceSession) SelectUserAllBalance(username string) ([]string, []string, []*big.Int, error) {
	return _OpenSource.Contract.SelectUserAllBalance(&_OpenSource.CallOpts, username)
}

// SelectUserAllBalance is a free data retrieval call binding the contract method 0xc50573fa.
//
// Solidity: function selectUserAllBalance(string username) constant returns(string[], string[], uint256[])
func (_OpenSource *OpenSourceCallerSession) SelectUserAllBalance(username string) ([]string, []string, []*big.Int, error) {
	return _OpenSource.Contract.SelectUserAllBalance(&_OpenSource.CallOpts, username)
}

// SelectUserBalance is a free data retrieval call binding the contract method 0x233cbaf7.
//
// Solidity: function selectUserBalance(string username, string token_name) constant returns(string[], string[], uint256[])
func (_OpenSource *OpenSourceCaller) SelectUserBalance(opts *bind.CallOpts, username string, token_name string) ([]string, []string, []*big.Int, error) {
	var (
		ret0 = new([]string)
		ret1 = new([]string)
		ret2 = new([]*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
	}
	err := _OpenSource.contract.Call(opts, out, "selectUserBalance", username, token_name)
	return *ret0, *ret1, *ret2, err
}

// SelectUserBalance is a free data retrieval call binding the contract method 0x233cbaf7.
//
// Solidity: function selectUserBalance(string username, string token_name) constant returns(string[], string[], uint256[])
func (_OpenSource *OpenSourceSession) SelectUserBalance(username string, token_name string) ([]string, []string, []*big.Int, error) {
	return _OpenSource.Contract.SelectUserBalance(&_OpenSource.CallOpts, username, token_name)
}

// SelectUserBalance is a free data retrieval call binding the contract method 0x233cbaf7.
//
// Solidity: function selectUserBalance(string username, string token_name) constant returns(string[], string[], uint256[])
func (_OpenSource *OpenSourceCallerSession) SelectUserBalance(username string, token_name string) ([]string, []string, []*big.Int, error) {
	return _OpenSource.Contract.SelectUserBalance(&_OpenSource.CallOpts, username, token_name)
}

// AddCommitData is a paid mutator transaction binding the contract method 0x828d80ff.
//
// Solidity: function addCommitData(string commit_hash, string repo_id, string author, string email, string time, string content, string commit_diff) returns(int256)
func (_OpenSource *OpenSourceTransactor) AddCommitData(opts *bind.TransactOpts, commit_hash string, repo_id string, author string, email string, time string, content string, commit_diff string) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.contract.Transact(opts, "addCommitData", commit_hash, repo_id, author, email, time, content, commit_diff)
}

func (_OpenSource *OpenSourceTransactor) AsyncAddCommitData(handler func(*types.Receipt, error), opts *bind.TransactOpts, commit_hash string, repo_id string, author string, email string, time string, content string, commit_diff string) (*types.Transaction, error) {
	return _OpenSource.contract.AsyncTransact(opts, handler, "addCommitData", commit_hash, repo_id, author, email, time, content, commit_diff)
}

// AddCommitData is a paid mutator transaction binding the contract method 0x828d80ff.
//
// Solidity: function addCommitData(string commit_hash, string repo_id, string author, string email, string time, string content, string commit_diff) returns(int256)
func (_OpenSource *OpenSourceSession) AddCommitData(commit_hash string, repo_id string, author string, email string, time string, content string, commit_diff string) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.Contract.AddCommitData(&_OpenSource.TransactOpts, commit_hash, repo_id, author, email, time, content, commit_diff)
}

func (_OpenSource *OpenSourceSession) AsyncAddCommitData(handler func(*types.Receipt, error), commit_hash string, repo_id string, author string, email string, time string, content string, commit_diff string) (*types.Transaction, error) {
	return _OpenSource.Contract.AsyncAddCommitData(handler, &_OpenSource.TransactOpts, commit_hash, repo_id, author, email, time, content, commit_diff)
}

// AddCommitData is a paid mutator transaction binding the contract method 0x828d80ff.
//
// Solidity: function addCommitData(string commit_hash, string repo_id, string author, string email, string time, string content, string commit_diff) returns(int256)
func (_OpenSource *OpenSourceTransactorSession) AddCommitData(commit_hash string, repo_id string, author string, email string, time string, content string, commit_diff string) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.Contract.AddCommitData(&_OpenSource.TransactOpts, commit_hash, repo_id, author, email, time, content, commit_diff)
}

func (_OpenSource *OpenSourceTransactorSession) AsyncAddCommitData(handler func(*types.Receipt, error), commit_hash string, repo_id string, author string, email string, time string, content string, commit_diff string) (*types.Transaction, error) {
	return _OpenSource.Contract.AsyncAddCommitData(handler, &_OpenSource.TransactOpts, commit_hash, repo_id, author, email, time, content, commit_diff)
}

// AddPullRequestData is a paid mutator transaction binding the contract method 0x5afac7eb.
//
// Solidity: function addPullRequestData(string pull_request_id, string content) returns(int256)
func (_OpenSource *OpenSourceTransactor) AddPullRequestData(opts *bind.TransactOpts, pull_request_id string, content string) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.contract.Transact(opts, "addPullRequestData", pull_request_id, content)
}

func (_OpenSource *OpenSourceTransactor) AsyncAddPullRequestData(handler func(*types.Receipt, error), opts *bind.TransactOpts, pull_request_id string, content string) (*types.Transaction, error) {
	return _OpenSource.contract.AsyncTransact(opts, handler, "addPullRequestData", pull_request_id, content)
}

// AddPullRequestData is a paid mutator transaction binding the contract method 0x5afac7eb.
//
// Solidity: function addPullRequestData(string pull_request_id, string content) returns(int256)
func (_OpenSource *OpenSourceSession) AddPullRequestData(pull_request_id string, content string) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.Contract.AddPullRequestData(&_OpenSource.TransactOpts, pull_request_id, content)
}

func (_OpenSource *OpenSourceSession) AsyncAddPullRequestData(handler func(*types.Receipt, error), pull_request_id string, content string) (*types.Transaction, error) {
	return _OpenSource.Contract.AsyncAddPullRequestData(handler, &_OpenSource.TransactOpts, pull_request_id, content)
}

// AddPullRequestData is a paid mutator transaction binding the contract method 0x5afac7eb.
//
// Solidity: function addPullRequestData(string pull_request_id, string content) returns(int256)
func (_OpenSource *OpenSourceTransactorSession) AddPullRequestData(pull_request_id string, content string) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.Contract.AddPullRequestData(&_OpenSource.TransactOpts, pull_request_id, content)
}

func (_OpenSource *OpenSourceTransactorSession) AsyncAddPullRequestData(handler func(*types.Receipt, error), pull_request_id string, content string) (*types.Transaction, error) {
	return _OpenSource.Contract.AsyncAddPullRequestData(handler, &_OpenSource.TransactOpts, pull_request_id, content)
}

// AddPushData is a paid mutator transaction binding the contract method 0xb3fcc6f4.
//
// Solidity: function addPushData(string push_id, uint256 push_number, string repo_id, string reponame, string ownername, string username, string branch, string commit_shas, string time) returns(int256)
func (_OpenSource *OpenSourceTransactor) AddPushData(opts *bind.TransactOpts, push_id string, push_number *big.Int, repo_id string, reponame string, ownername string, username string, branch string, commit_shas string, time string) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.contract.Transact(opts, "addPushData", push_id, push_number, repo_id, reponame, ownername, username, branch, commit_shas, time)
}

func (_OpenSource *OpenSourceTransactor) AsyncAddPushData(handler func(*types.Receipt, error), opts *bind.TransactOpts, push_id string, push_number *big.Int, repo_id string, reponame string, ownername string, username string, branch string, commit_shas string, time string) (*types.Transaction, error) {
	return _OpenSource.contract.AsyncTransact(opts, handler, "addPushData", push_id, push_number, repo_id, reponame, ownername, username, branch, commit_shas, time)
}

// AddPushData is a paid mutator transaction binding the contract method 0xb3fcc6f4.
//
// Solidity: function addPushData(string push_id, uint256 push_number, string repo_id, string reponame, string ownername, string username, string branch, string commit_shas, string time) returns(int256)
func (_OpenSource *OpenSourceSession) AddPushData(push_id string, push_number *big.Int, repo_id string, reponame string, ownername string, username string, branch string, commit_shas string, time string) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.Contract.AddPushData(&_OpenSource.TransactOpts, push_id, push_number, repo_id, reponame, ownername, username, branch, commit_shas, time)
}

func (_OpenSource *OpenSourceSession) AsyncAddPushData(handler func(*types.Receipt, error), push_id string, push_number *big.Int, repo_id string, reponame string, ownername string, username string, branch string, commit_shas string, time string) (*types.Transaction, error) {
	return _OpenSource.Contract.AsyncAddPushData(handler, &_OpenSource.TransactOpts, push_id, push_number, repo_id, reponame, ownername, username, branch, commit_shas, time)
}

// AddPushData is a paid mutator transaction binding the contract method 0xb3fcc6f4.
//
// Solidity: function addPushData(string push_id, uint256 push_number, string repo_id, string reponame, string ownername, string username, string branch, string commit_shas, string time) returns(int256)
func (_OpenSource *OpenSourceTransactorSession) AddPushData(push_id string, push_number *big.Int, repo_id string, reponame string, ownername string, username string, branch string, commit_shas string, time string) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.Contract.AddPushData(&_OpenSource.TransactOpts, push_id, push_number, repo_id, reponame, ownername, username, branch, commit_shas, time)
}

func (_OpenSource *OpenSourceTransactorSession) AsyncAddPushData(handler func(*types.Receipt, error), push_id string, push_number *big.Int, repo_id string, reponame string, ownername string, username string, branch string, commit_shas string, time string) (*types.Transaction, error) {
	return _OpenSource.Contract.AsyncAddPushData(handler, &_OpenSource.TransactOpts, push_id, push_number, repo_id, reponame, ownername, username, branch, commit_shas, time)
}

// AddUserBalance is a paid mutator transaction binding the contract method 0x83f9d43d.
//
// Solidity: function addUserBalance(string username, string token_name, uint256 amount) returns(int256)
func (_OpenSource *OpenSourceTransactor) AddUserBalance(opts *bind.TransactOpts, username string, token_name string, amount *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.contract.Transact(opts, "addUserBalance", username, token_name, amount)
}

func (_OpenSource *OpenSourceTransactor) AsyncAddUserBalance(handler func(*types.Receipt, error), opts *bind.TransactOpts, username string, token_name string, amount *big.Int) (*types.Transaction, error) {
	return _OpenSource.contract.AsyncTransact(opts, handler, "addUserBalance", username, token_name, amount)
}

// AddUserBalance is a paid mutator transaction binding the contract method 0x83f9d43d.
//
// Solidity: function addUserBalance(string username, string token_name, uint256 amount) returns(int256)
func (_OpenSource *OpenSourceSession) AddUserBalance(username string, token_name string, amount *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.Contract.AddUserBalance(&_OpenSource.TransactOpts, username, token_name, amount)
}

func (_OpenSource *OpenSourceSession) AsyncAddUserBalance(handler func(*types.Receipt, error), username string, token_name string, amount *big.Int) (*types.Transaction, error) {
	return _OpenSource.Contract.AsyncAddUserBalance(handler, &_OpenSource.TransactOpts, username, token_name, amount)
}

// AddUserBalance is a paid mutator transaction binding the contract method 0x83f9d43d.
//
// Solidity: function addUserBalance(string username, string token_name, uint256 amount) returns(int256)
func (_OpenSource *OpenSourceTransactorSession) AddUserBalance(username string, token_name string, amount *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.Contract.AddUserBalance(&_OpenSource.TransactOpts, username, token_name, amount)
}

func (_OpenSource *OpenSourceTransactorSession) AsyncAddUserBalance(handler func(*types.Receipt, error), username string, token_name string, amount *big.Int) (*types.Transaction, error) {
	return _OpenSource.Contract.AsyncAddUserBalance(handler, &_OpenSource.TransactOpts, username, token_name, amount)
}

// CreateRepo is a paid mutator transaction binding the contract method 0xd974b6dd.
//
// Solidity: function createRepo(string token_name, string owner, uint256 total_supply, uint256 cur_supply, string[] username, uint256[] balance) returns(int256)
func (_OpenSource *OpenSourceTransactor) CreateRepo(opts *bind.TransactOpts, token_name string, owner string, total_supply *big.Int, cur_supply *big.Int, username []string, balance []*big.Int) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.contract.Transact(opts, "createRepo", token_name, owner, total_supply, cur_supply, username, balance)
}

func (_OpenSource *OpenSourceTransactor) AsyncCreateRepo(handler func(*types.Receipt, error), opts *bind.TransactOpts, token_name string, owner string, total_supply *big.Int, cur_supply *big.Int, username []string, balance []*big.Int) (*types.Transaction, error) {
	return _OpenSource.contract.AsyncTransact(opts, handler, "createRepo", token_name, owner, total_supply, cur_supply, username, balance)
}

// CreateRepo is a paid mutator transaction binding the contract method 0xd974b6dd.
//
// Solidity: function createRepo(string token_name, string owner, uint256 total_supply, uint256 cur_supply, string[] username, uint256[] balance) returns(int256)
func (_OpenSource *OpenSourceSession) CreateRepo(token_name string, owner string, total_supply *big.Int, cur_supply *big.Int, username []string, balance []*big.Int) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.Contract.CreateRepo(&_OpenSource.TransactOpts, token_name, owner, total_supply, cur_supply, username, balance)
}

func (_OpenSource *OpenSourceSession) AsyncCreateRepo(handler func(*types.Receipt, error), token_name string, owner string, total_supply *big.Int, cur_supply *big.Int, username []string, balance []*big.Int) (*types.Transaction, error) {
	return _OpenSource.Contract.AsyncCreateRepo(handler, &_OpenSource.TransactOpts, token_name, owner, total_supply, cur_supply, username, balance)
}

// CreateRepo is a paid mutator transaction binding the contract method 0xd974b6dd.
//
// Solidity: function createRepo(string token_name, string owner, uint256 total_supply, uint256 cur_supply, string[] username, uint256[] balance) returns(int256)
func (_OpenSource *OpenSourceTransactorSession) CreateRepo(token_name string, owner string, total_supply *big.Int, cur_supply *big.Int, username []string, balance []*big.Int) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.Contract.CreateRepo(&_OpenSource.TransactOpts, token_name, owner, total_supply, cur_supply, username, balance)
}

func (_OpenSource *OpenSourceTransactorSession) AsyncCreateRepo(handler func(*types.Receipt, error), token_name string, owner string, total_supply *big.Int, cur_supply *big.Int, username []string, balance []*big.Int) (*types.Transaction, error) {
	return _OpenSource.Contract.AsyncCreateRepo(handler, &_OpenSource.TransactOpts, token_name, owner, total_supply, cur_supply, username, balance)
}

// MinusUserBalance is a paid mutator transaction binding the contract method 0x537dc596.
//
// Solidity: function minusUserBalance(string username, string token_name, uint256 amount) returns(int256)
func (_OpenSource *OpenSourceTransactor) MinusUserBalance(opts *bind.TransactOpts, username string, token_name string, amount *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.contract.Transact(opts, "minusUserBalance", username, token_name, amount)
}

func (_OpenSource *OpenSourceTransactor) AsyncMinusUserBalance(handler func(*types.Receipt, error), opts *bind.TransactOpts, username string, token_name string, amount *big.Int) (*types.Transaction, error) {
	return _OpenSource.contract.AsyncTransact(opts, handler, "minusUserBalance", username, token_name, amount)
}

// MinusUserBalance is a paid mutator transaction binding the contract method 0x537dc596.
//
// Solidity: function minusUserBalance(string username, string token_name, uint256 amount) returns(int256)
func (_OpenSource *OpenSourceSession) MinusUserBalance(username string, token_name string, amount *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.Contract.MinusUserBalance(&_OpenSource.TransactOpts, username, token_name, amount)
}

func (_OpenSource *OpenSourceSession) AsyncMinusUserBalance(handler func(*types.Receipt, error), username string, token_name string, amount *big.Int) (*types.Transaction, error) {
	return _OpenSource.Contract.AsyncMinusUserBalance(handler, &_OpenSource.TransactOpts, username, token_name, amount)
}

// MinusUserBalance is a paid mutator transaction binding the contract method 0x537dc596.
//
// Solidity: function minusUserBalance(string username, string token_name, uint256 amount) returns(int256)
func (_OpenSource *OpenSourceTransactorSession) MinusUserBalance(username string, token_name string, amount *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.Contract.MinusUserBalance(&_OpenSource.TransactOpts, username, token_name, amount)
}

func (_OpenSource *OpenSourceTransactorSession) AsyncMinusUserBalance(handler func(*types.Receipt, error), username string, token_name string, amount *big.Int) (*types.Transaction, error) {
	return _OpenSource.Contract.AsyncMinusUserBalance(handler, &_OpenSource.TransactOpts, username, token_name, amount)
}

// TransferUserBalance is a paid mutator transaction binding the contract method 0xc08bda85.
//
// Solidity: function transferUserBalance(string payer, string payee, string token_name, uint256 amount) returns(int256)
func (_OpenSource *OpenSourceTransactor) TransferUserBalance(opts *bind.TransactOpts, payer string, payee string, token_name string, amount *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.contract.Transact(opts, "transferUserBalance", payer, payee, token_name, amount)
}

func (_OpenSource *OpenSourceTransactor) AsyncTransferUserBalance(handler func(*types.Receipt, error), opts *bind.TransactOpts, payer string, payee string, token_name string, amount *big.Int) (*types.Transaction, error) {
	return _OpenSource.contract.AsyncTransact(opts, handler, "transferUserBalance", payer, payee, token_name, amount)
}

// TransferUserBalance is a paid mutator transaction binding the contract method 0xc08bda85.
//
// Solidity: function transferUserBalance(string payer, string payee, string token_name, uint256 amount) returns(int256)
func (_OpenSource *OpenSourceSession) TransferUserBalance(payer string, payee string, token_name string, amount *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.Contract.TransferUserBalance(&_OpenSource.TransactOpts, payer, payee, token_name, amount)
}

func (_OpenSource *OpenSourceSession) AsyncTransferUserBalance(handler func(*types.Receipt, error), payer string, payee string, token_name string, amount *big.Int) (*types.Transaction, error) {
	return _OpenSource.Contract.AsyncTransferUserBalance(handler, &_OpenSource.TransactOpts, payer, payee, token_name, amount)
}

// TransferUserBalance is a paid mutator transaction binding the contract method 0xc08bda85.
//
// Solidity: function transferUserBalance(string payer, string payee, string token_name, uint256 amount) returns(int256)
func (_OpenSource *OpenSourceTransactorSession) TransferUserBalance(payer string, payee string, token_name string, amount *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _OpenSource.Contract.TransferUserBalance(&_OpenSource.TransactOpts, payer, payee, token_name, amount)
}

func (_OpenSource *OpenSourceTransactorSession) AsyncTransferUserBalance(handler func(*types.Receipt, error), payer string, payee string, token_name string, amount *big.Int) (*types.Transaction, error) {
	return _OpenSource.Contract.AsyncTransferUserBalance(handler, &_OpenSource.TransactOpts, payer, payee, token_name, amount)
}
